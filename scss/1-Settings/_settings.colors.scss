// ======================================================================================
//  Here we set our color palette
// ======================================================================================



// ==========================================
//  Global color variables.
//  Never use them directly in the styles,
//  only for functions and mixins.
// ==========================================

$_color-base-primary:                           #009 !default;
$_color-base-secondary:                         #ff6e00 !default;
$_color-base-tertiary:                          #72ce9b !default;

$_color-base-success:                           #97c14a !default;
$_color-base-info:                              #4b92db !default;
$_color-base-warning:                           #ffa500 !default;
$_color-base-alert:                             #dd1717 !default;


// ==========================================
//  Two color extremes, lightest
//  and darkest colors.
// ==========================================

$color-positive:                                #fff !default;
$color-negative:                                #000 !default;


// ==========================================
//  We put all our colors in a
//  Sass List Map using the following
//  naming pattern:
//
//  x2-dark
//  x-dark
//  dark
//  base
//  light
//  x-light
//  x2-light
// ==========================================

$palettes: (
  'primary': (
    base:                                       $_color-base-primary,
    light:                                      #44697d,
    x-light:                                    #739abc,
    x2-light:                                   $_color-base-info
  ),
  'secondary': (
    base:                                       $_color-base-secondary
  ),
  'tertiary': (
    dark:                                       #5e9c6f,
    base:                                       $_color-base-tertiary,
    light:                                      #72ce9b,
  ),
  'neutral': (
    dark:                                       #392533,
    base:                                       #5e6a71,
    light:                                      #949d9e,
    x-light:                                    #efefef
  ),
  'white': (
    base:                                       $color-positive
  ),
  'black': (
    base:                                       $color-negative
  ),
  'blue': (
    base:                                       $_color-base-info
  ),
  'purple': (
    light:                                      #af94a3,
    base:                                       #bf2296,
    dark:                                       #5e2d61,
  ),
  'success': (
    base:                                       $_color-base-success,
  ),
  'info': (
    base:                                       $_color-base-info,
  ),
  'warning': (
    base:                                       $_color-base-warning,
  ),
  'alert': (
    base:                                       $_color-base-alert,
  ),
);

$opacity: (
  'light':                                      .8,
  'base':                                       .5,
  'dark':                                       .2
);


// ==========================================
//  A simple function for accessing
//  the colors from our mapping
//  To call our color palettes in our
//  styles, we use a very simple custom
//  Sass function to access colours in our
//  palette by name and optional tone/shade:
//
//  USAGE:
//
//  a {
//    color: palette($myColor);
//
//    &:hover {
//      color: palette($myColor, dark);
//    }
//  }
//
//  .myClass {
//    color: palette($myColor, 'light', $alpha: .9);
//    background-color: palette($myColor, $alpha: .7);
//  }
// ==========================================

@function palette($palette, $tone: 'base', $alpha: 1) {
  $color: null;

  // Get the color spectrum
  $color-spectrum: map-get($palettes, $palette);

  // Get the color variant
  @if $color-spectrum {
    $color: map-get($color-spectrum, $tone);
  }

  // Get the alpha setting
  $alpha: if(type-of($alpha) == 'number', $alpha, map-get($opacity, $alpha));

  // Set the alpha of the color
  @if $alpha {
    $color: rgba($color, $alpha);
  }

  @return $color;
}

